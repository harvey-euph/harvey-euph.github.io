---
title: "一次解決困難問題的經驗"
date: 2025-07-25 00:00:00 +0800
categories: [Careers]
tags: []
---

"What was the hardest problem you have ever solved?"

這個問題我有一個故事可以做為回答

我認為最難解決的問題，是做一件和現有專案幾乎一樣的事情，卻遇到了前所未有的問題。
這個時候沒有人可以問，因為也沒有人解決過這樣的問題，也可能會被質疑為什麼要花超出預期的時間，而我就在工作第三個月時遇到了這樣的問題

當時我要負責接一個新的交易所的 FIX Client，使用的就是公司內部一套完整的其他交易所的專案拿來修改，主管認為是給我一個小練習，只要依樣畫葫蘆就可以了，但就是這個時候出現了完全無法理解的 Bug

情境如下：

- FIX Session 正常建立，成功送出我的 log on 訊息也從對方 FIX Server 收到 log on confirmed，符合 FIX Protocol 規範的行為。
- 開始送 heartbeat 訊息，這也是符合 FIX Protocol 規範的行為。
- 經過一兩分鐘後必定收到對方的 Test Request 訊息，這是對方無法確認我方 FIX Client 是否還活著的訊息，我方要在此時回傳 heartbeat 告訴對方我們還活著。
- 送出 heartbeat 回應 Test Request 之後，理論上對方已經要能確認我方存活，但實際上對方會在幾秒後將 Session 關閉，強制我們斷線。

這個循環我始終無法跳出，於是我就開始拿出拆解問題的精神，仔細分析到底是整個網路 Session 的哪個部分出了問題，作為一個數學系背景的人，我們習慣先把已知條件列出來：

- 可以成功 log on，表示網路連線沒有問題。
- 但是對方會發送 Test Request，表示對方夠長時間沒有收到我們的 heartbeat。
- FIX 是基於 TCP 的協定，因此要確定對方有沒有收到訊息，我們可以使用 tcpdump 搭配 Wireshark 來抓網路封包，這是我原本不會的技能，為了解決此次問題順便學到的，經過檢查後，對方確實有在 TCP 層收到我方的所有訊息才對。
- 主管建議我可以用現成的 python FIX engine 測試看看能不能正常運作，來確保是對方有問題還是我們的東西有問題，檢查後發現居然可以順利運作，這讓我更困惑了。

此時幾乎可以確認是我們的問題，但是還是找不到問題所在，我嘗試了各種可能的解決方案，包含改變送的順序

Q1: 如果先送 heartbeat 再送 log on 會怎樣? 
A1: 會收到沒有 log on 的消息，但此時如果再發送 log on ，也收不到 log on confirmed，此時已經可以確認對方只對我們發送的第一則訊息做出回應

Q2: 如果改變發送的函數 (Sync/Async) 會怎樣? 原先都只送 Blocking 的 log on，如果換成 Async 的 log on 會怎樣?
A2: 一樣，情況沒有改善。

未完待續...

=========================================================

暫時記錄在這邊

覺得接 API 有時候很煩的是
document 有時候就不會寫得很詳細
常常要像個偵探一樣尋找一些蛛絲馬跡來追訂單的行為
如過要接通一些行為比較複雜的訂單，例如有親子關係的訂單
就需要思考很多，會要分別處理交易量啦，找連結的關係啦，比免重覆計算啦
有時候這些複雜行為各家的管理方式也不同
就會每次都要重新研究行為